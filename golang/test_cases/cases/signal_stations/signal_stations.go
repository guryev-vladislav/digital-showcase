package signalstations

import (
	"sort"
)

// Сигнал от базовых станций

// На территории поселка N есть три базовые станции МТС. Первая станция покрывает территорию радиусом a, вторая — радиусом b, третья — радиусом c.
// Это значит, что сигнал первой базовой станции принимается на расстоянии a или меньше в любую сторону от станции, второй базовой станции — на расстоянии b или меньше в любую сторону от станции и третьей базовой станции — на расстоянии c или меньше в любую сторону от станции.
// При измерении уровня сигнала специалисты МТС заметили, что:
// — есть ровно одна точка, в которой принимается сигнал от базовых станций 1 и 2;
// — ровно одна точка, в которой принимается сигнал от базовых станций 2 и 3;
// — ровно одна точка, в которой принимается сигнал от базовых станций 1 и 3.
// Найди максимальное и минимальное значение квадрата площади треугольника, образованного базовыми станциями.

// Формат входных данных
// Первая строка входных данных содержит одно целое число a (1 ≤ a ≤ 100) — радиус покрытия первой станции. Вторая строка содержит одно целое число b (1 ≤ b ≤ 100) — радиус покрытия второй станции. Третья строка содержит одно целое число c (1 ≤ c ≤ 100) — радиус покрытия третьей станции.

// Формат выходных данных
// Выведи два целых числа — минимальное и максимальное значение квадрата площади треугольника, образованного базовыми станциями. Можно показать, что при заданных условиях квадрат площади треугольника (если треугольник существует) всегда целый. Если описанная в задаче ситуация при заданных a, b и c невозможна, выведите −1

// type StationsCoverage struct {
// 	max int
// 	min int
// }

func SignalStations(signal1, signal2, signal3 int) int {
	a := signal1 + signal2
	b := signal3 + signal2
	c := signal3 + signal1
	sides := []int{a, b, c}
	sort.Ints(sides)

	if sides[0]+sides[1] <= sides[2] {
		return -1
	}

	s := (a + b + c) / 2
	area := (s * (s - a) * (s - b) * (s - c))

	return area
}
